// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_DB")
}

model User {
  id      Int   @id @default(autoincrement())
  email   String   @unique
  name    String
  username String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pfp String
  memberships ConversationMembership[]
  messages Message[]

  @@map("users")
}

model Conversation {
  id    Int   @id @default(autoincrement())
  type  String
  name String?
  memberships ConversationMembership[]
  messages Message[]

  @@map("conversations")
}

model ConversationMembership {
  id    Int   @id @default(autoincrement())
  user    User    @relation(fields: [userId], references: [id])
  userId    Int
  conversation    Conversation    @relation(fields: [conversationId], references: [id])
  conversationId    Int
  role    String?
  joinedAt    DateTime    @default(now())

  @@unique([userId, conversationId])

  @@map("conversation_memberships")
}

model Message {
  id    Int   @id @default(autoincrement())
  conversation    Conversation    @relation(fields: [conversationId], references: [id])
  conversationId    Int
  sender    User    @relation(fields: [senderId], references: [id])
  senderId    Int
  content   String
  createdAt   DateTime    @default(now())

  @@map("messages")
}